Etapas para configurar o deploy seguro no Azure
1. Gerar o perfil de publica√ß√£o (publish profile)
No portal do Azure:
- V√° at√© o seu recurso do App Service
- No menu lateral, clique em "Perfil de publica√ß√£o"
- Baixe o arquivo .PublishSettings
- Copie o conte√∫do XML do arquivo

2. Adicionar o publish profile como secret no GitHub
No seu reposit√≥rio:
- V√° em Settings > Secrets and variables > Actions
- Crie um novo secret chamado: AZURE_WEBAPP_PUBLISH_PROFILE
- Cole o conte√∫do do XML do publish profile

3. Criar o workflow de deploy
Crie o arquivo .github/workflows/deploy.yml com o seguinte conte√∫do:


=============================
Op√ß√£o 1: Deploy para EC2 via SSH
Essa √© a forma mais direta e parecida com o VPS:
‚úÖ Pr√©-requisitos
- Uma inst√¢ncia EC2 rodando Linux com Python instalado
- Chave SSH configurada
- Git instalado na EC2
- Seu reposit√≥rio no GitHub
üîê Seguran√ßa
- Gere uma chave SSH e adicione a p√∫blica na EC2 (~/.ssh/authorized_keys)
- Adicione a chave privada como secret no GitHub (AWS_SSH_KEY)
- Use appleboy/ssh-action para copiar e executar comandos remotamente

Op√ß√£o 2: Deploy com AWS CodeDeploy + IAM + OIDC
Essa √© mais robusta e segura, ideal para ambientes profissionais.
‚úÖ Pr√©-requisitos
- Criar uma aplica√ß√£o no AWS CodeDeploy
- Configurar fun√ß√µes IAM para EC2 e CodeDeploy
- Usar OIDC (OpenID Connect) para autentica√ß√£o segura entre GitHub e AWS
üîê Seguran√ßa com OIDC
- GitHub assume uma role tempor√°ria via token seguro
- Sem necessidade de armazenar credenciais est√°ticas
- Permiss√µes finamente controladas via IA
